import pandas as pd
import logging
from typing import Dict, Any

# Configuração básica de logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def extract_data(source_path: str) -> pd.DataFrame:
    """
    [ETAPA 1: EXTRAÇÃO]
    Responsável por ler os dados da fonte.
    
    >>> O Levy substituirá esta lógica por uma query SQL real no BD Samsung One.
    
    Args:
        source_path (str): Caminho para o arquivo (simulação) ou credenciais de conexão.

    Returns:
        pd.DataFrame: DataFrame com os dados brutos extraídos.
    """
    logging.info(f"Iniciando extração de dados de: {source_path}")
    
    # --- PONTO DE INTEGRAÇÃO DO LEVY: SUBSTITUIR POR CÓDIGO SQL ---
    try:
        # Assumindo que a fonte é um CSV (simulação).
        # Em produção, usaria pd.read_sql() ou uma biblioteca de driver SQL.
        df = pd.read_csv(source_path)
        logging.info(f"Extração concluída. {len(df)} registros encontrados.")
        return df
    except FileNotFoundError:
        logging.error(f"ERRO: Arquivo de origem não encontrado em {source_path}. A pipeline será abortada.")
        return pd.DataFrame()
    except Exception as e:
        logging.error(f"Erro inesperado durante a extração: {e}")
        return pd.DataFrame()
    # -------------------------------------------------------------
